import numpy as np
from numpy import array

def taylor(deriv, x, y, xstop, h):
    X = []
    Y = []
    X.append(x)
    Y.append(y)
    while x < xstop:
        D = deriv(x, y)
        H = 1.0
        for j in range(3):
            H = H * h / (j + 1)
            y = y + D[j] * H

        x = x + h
        X.append(x)
        Y.append(y)

    return array(X), array(Y)
def deriv(x, y):
    D = np.zeros((4, 1))
    D[0] = [2*y[0] + 3*np.exp(x)]
    D[1] = [4*y[0] + 9*np.exp(x)]
    D[2] = [8*y[0] + 21*np.exp(x)]
    D[3] = [16*y[0] + 45*np.exp(x)]
    return D
x = 0.0
xstop = 0.3
y = array([0.0])
h = 0.1
X, Y = taylor(deriv, x, y, xstop, h)
print("the required values x=%0.2f, y=%0.5f, x=%0.2f, y=%0.5f, x=%0.2f, y=%0.5f, x=%0.2f, y=%0.5f" % 
      (X[0], Y[0], X[1], Y[1], X[2], Y[2], X[3], Y[3]))
